package com.kots.sidim.web.model;

// Generated 27/08/2012 21:21:46 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.faces.bean.ManagedBean;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.MappedSuperclass;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Estado generated by hbm2java
 */
@Entity
@Table(name = "ESTADO")
@ManagedBean(name = "estado")
public class Estado implements java.io.Serializable {

	private String uf;
	private String nome;
	private Set<PendenciaCadastroImoveis> pendenciaCadastroImoveis = new HashSet<PendenciaCadastroImoveis>(0);
	private Set<Imovel> imovels = new HashSet<Imovel>(0);
	private Set<Funcionario> funcionarios = new HashSet<Funcionario>(0);
	private Set<Cidade> cidades = new HashSet<Cidade>(0);
	private Set<Perfil> perfils = new HashSet<Perfil>(0);

	public Estado() {
	}

	public Estado(String uf, String nome) {
		this.uf = uf;
		this.nome = nome;
	}

	public Estado(String uf, String nome,
			Set<PendenciaCadastroImoveis> pendenciaCadastroImoveis,
			Set<Imovel> imovels, Set<Funcionario> funcionarios,
			Set<Cidade> cidades, Set<Perfil> perfils) {
		this.uf = uf;
		this.nome = nome;
		this.pendenciaCadastroImoveis = pendenciaCadastroImoveis;
		this.imovels = imovels;
		this.funcionarios = funcionarios;
		this.cidades = cidades;
		this.perfils = perfils;
	}

	@Id
	@Column(name = "UF", unique = true, nullable = false, length = 2)
	public String getUf() {
		return this.uf;
	}

	public void setUf(String uf) {
		this.uf = uf;
	}

	@Column(name = "NOME", nullable = false, length = 40)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estado")
	public Set<PendenciaCadastroImoveis> getPendenciaCadastroImoveis() {
		return this.pendenciaCadastroImoveis;
	}

	public void setPendenciaCadastroImoveis(
			Set<PendenciaCadastroImoveis> pendenciaCadastroImoveis) {
		this.pendenciaCadastroImoveis = pendenciaCadastroImoveis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estado")
	public Set<Imovel> getImovels() {
		return this.imovels;
	}

	public void setImovels(Set<Imovel> imovels) {
		this.imovels = imovels;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estado")
	public Set<Funcionario> getFuncionarios() {
		return this.funcionarios;
	}

	public void setFuncionarios(Set<Funcionario> funcionarios) {
		this.funcionarios = funcionarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estado")
	public Set<Cidade> getCidades() {
		return this.cidades;
	}

	public void setCidades(Set<Cidade> cidades) {
		this.cidades = cidades;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estado")
	public Set<Perfil> getPerfils() {
		return this.perfils;
	}

	public void setPerfils(Set<Perfil> perfils) {
		this.perfils = perfils;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((uf == null) ? 0 : uf.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Estado))
			return false;
		Estado other = (Estado) obj;
		if (uf == null) {
			if (other.uf != null)
				return false;
		} else if (!uf.equals(other.uf))
			return false;
		return true;
	}

	
}
