package com.kots.sidim.web.model;

// Generated 13/09/2012 19:59:14 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.faces.bean.ManagedBean;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.Hibernate;

import com.kots.sidim.web.controller.BairroBO;
import com.kots.sidim.web.controller.CidadeBO;
import com.kots.sidim.web.controller.TipoImovelBO;

/**
 * Imovel generated by hbm2java
 */
@Entity
@Table(name = "IMOVEL")
@ManagedBean(name = "imovel")
public class Imovel implements java.io.Serializable {
	
	private int idImovel;
	private Byte dormitorios;
	private BigDecimal areaTotal;
	private BigDecimal areaConstruida;
	private Byte garagens;
	private Byte suites;
	private String cep;
	private String rua;
	private Estado estado;
	private TipoImovel tipoImovel;
	private Cidade cidade;
	private Bairro bairro;
	private BigDecimal preco;
	private String descricao;
	private String intencao;
	private Set<Foto> fotos = new HashSet<Foto>(0);
	private Set<InteresseCliente> interesseClientes = new HashSet<InteresseCliente>(0);

	public Imovel() {
	}

	public Imovel(int idImovel, TipoImovel tipoImovel, Byte dormitorios, BigDecimal areaTotal, BigDecimal areaConstruida, String cep, String rua, Estado estado, Cidade cidade, Bairro bairro,
			BigDecimal preco) {
		this.idImovel = idImovel;
		this.tipoImovel = tipoImovel;
		this.dormitorios = dormitorios;
		this.areaConstruida = areaConstruida;
		this.areaTotal = areaTotal;
		this.cep = cep;
		this.rua = rua;
		this.estado = estado;
		this.cidade = cidade;
		this.bairro = bairro;
		this.preco = preco;
	}

	public Imovel(int idImovel, TipoImovel tipoImovel, Byte dormitorios,BigDecimal areaTotal, BigDecimal areaConstruida, Byte garagens, Byte suites, String cep, String rua, Estado estado,
			Cidade cidade, Bairro bairro, BigDecimal preco, String descricao, String intencao, Set<Foto> fotos,Set<InteresseCliente> interesseClientes) {
		this.idImovel = idImovel;
		this.tipoImovel = tipoImovel;
		this.dormitorios = dormitorios;
		this.areaConstruida = areaConstruida;
		this.areaTotal = areaTotal;
		this.garagens = garagens;
		this.suites = suites;
		this.cep = cep;
		this.rua = rua;
		this.estado = estado;
		this.cidade = cidade;
		this.bairro = bairro;
		this.preco = preco;
		this.descricao = descricao;
		this.intencao = intencao;
		this.fotos = fotos;
		this.interesseClientes = interesseClientes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator="SEQ_IMOVEL")
	@SequenceGenerator(name="SEQ_IMOVEL", sequenceName = "SEQ_IMOVEL", allocationSize=1)
	@Column(name = "ID_IMOVEL", unique = true, nullable = false, precision = 8, scale = 0)
	public int getIdImovel() {
		return this.idImovel;
	}

	public void setIdImovel(int idImovel) {
		this.idImovel = idImovel;
	}

	@Column(name = "DORMITORIOS", nullable = false, precision = 2, scale = 0)
	public Byte getDormitorios() {
		return this.dormitorios;
	}

	public void setDormitorios(Byte dormitorios) {
		this.dormitorios = dormitorios;
	}

	@Column(name = "AREA_TOTAL", nullable = false, precision = 8)
	public BigDecimal getAreaTotal() {
		return this.areaTotal;
	}

	public void setAreaTotal(BigDecimal areaTotal) {
		this.areaTotal = areaTotal;
	}
	
	@Column(name = "AREA_CONSTRUIDA", nullable = false, precision = 8)
	public BigDecimal getAreaConstruida() {
		return this.areaConstruida;
	}

	public void setAreaConstruida(BigDecimal areaConstruida) {
		this.areaConstruida = areaConstruida;
	}

	@Column(name = "GARAGENS", precision = 2, scale = 0)
	public Byte getGaragens() {
		return this.garagens;
	}

	public void setGaragens(Byte garagens) {
		this.garagens = garagens;
	}

	@Column(name = "SUITES", precision = 2, scale = 0)
	public Byte getSuites() {
		return this.suites;
	}

	public void setSuites(Byte suites) {
		this.suites = suites;
	}

	@Column(name = "CEP", nullable = false, length = 10)
	public String getCep() {
		return this.cep;
	}

	public void setCep(String cep) {
		this.cep = cep;
	}

	@Column(name = "RUA", nullable = false, length = 50)
	public String getRua() {
		return this.rua;
	}

	public void setRua(String rua) {
		this.rua = rua;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESTADO", nullable = false)
	public Estado getEstado() {
		return this.estado;
	}

	public void setEstado(Estado estado) {
		this.estado = estado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIPO_IMOVEL", nullable = false)
	public TipoImovel getTipoImovel() {
		if (tipoImovel != null) {
			TipoImovelBO tipoImovelBO = new TipoImovelBO();
			tipoImovel = tipoImovelBO.obter(tipoImovel.getIdTipoImovel());
		}
		return this.tipoImovel;
	}

	public void setTipoImovel(TipoImovel tipoImovel) {
		this.tipoImovel = tipoImovel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_CIDADE", nullable = false)
	public Cidade getCidade() {
		if (cidade != null) {
			CidadeBO cidadeBO = new CidadeBO();
			cidade = cidadeBO.obter(cidade.getIdCidade());
			//Hibernate.initialize(cidade);
		}
		return this.cidade;
	}

	public void setCidade(Cidade cidade) {

		this.cidade = cidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_BAIRRO", nullable = false)
	public Bairro getBairro() {
		if (bairro != null) {
			BairroBO bairroBO = new BairroBO();
			bairro = bairroBO.obter(bairro.getIdBairro());
		}
		return this.bairro;
	}

	public void setBairro(Bairro bairro) {
		this.bairro = bairro;
	}

	@Column(name = "PRECO", nullable = false, precision = 10)
	public BigDecimal getPreco() {
		return this.preco;
	}

	public void setPreco(BigDecimal preco) {
		this.preco = preco;
	}

	@Column(name = "DESCRICAO", length = 3000)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "INTENCAO", length = 1)
	public String getIntencao() {
		return this.intencao;
	}

	public void setIntencao(String intencao) {
		this.intencao = intencao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imovel")
	public Set<Foto> getFotos() {
		return this.fotos;
	}

	public void setFotos(Set<Foto> fotos) {
		this.fotos = fotos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imovel")
	public Set<InteresseCliente> getInteresseClientes() {
		return this.interesseClientes;
	}

	public void setInteresseClientes(Set<InteresseCliente> interesseClientes) {
		this.interesseClientes = interesseClientes;
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + idImovel;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Imovel))
			return false;
		Imovel other = (Imovel) obj;
		if (idImovel != other.idImovel)
			return false;
		return true;
	}
	
}
